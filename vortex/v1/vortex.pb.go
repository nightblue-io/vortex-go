// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: vortex/v1/vortex.proto

package vortex

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	types "github.com/vortex-io/vortex-go/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for the CreateEnvironment rpc.
type CreateEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Valid values:
	//
	// SC_MR_GCP
	// SC_SR_GCP
	// SC_MR_AWS
	// SC_SR_AWS
	// MC_AUTO
	Profile string         `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	GcpInfo *types.GCPInfo `protobuf:"bytes,3,opt,name=gcp_info,json=gcpInfo,proto3" json:"gcp_info,omitempty"`
	AwsInfo *types.AWSInfo `protobuf:"bytes,4,opt,name=aws_info,json=awsInfo,proto3" json:"aws_info,omitempty"`
}

func (x *CreateEnvironmentRequest) Reset() {
	*x = CreateEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vortex_v1_vortex_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentRequest) ProtoMessage() {}

func (x *CreateEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vortex_v1_vortex_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_vortex_v1_vortex_proto_rawDescGZIP(), []int{0}
}

func (x *CreateEnvironmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEnvironmentRequest) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *CreateEnvironmentRequest) GetGcpInfo() *types.GCPInfo {
	if x != nil {
		return x.GcpInfo
	}
	return nil
}

func (x *CreateEnvironmentRequest) GetAwsInfo() *types.AWSInfo {
	if x != nil {
		return x.AwsInfo
	}
	return nil
}

// Response message for the CreateEnvironment rpc.
type CreateEnvironmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Operation *types.Operation `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *CreateEnvironmentResponse) Reset() {
	*x = CreateEnvironmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vortex_v1_vortex_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentResponse) ProtoMessage() {}

func (x *CreateEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vortex_v1_vortex_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_vortex_v1_vortex_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEnvironmentResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEnvironmentResponse) GetOperation() *types.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// Request message for the GetEnvironment rpc.
type GetEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetEnvironmentRequest) Reset() {
	*x = GetEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vortex_v1_vortex_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentRequest) ProtoMessage() {}

func (x *GetEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vortex_v1_vortex_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*GetEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_vortex_v1_vortex_proto_rawDescGZIP(), []int{2}
}

func (x *GetEnvironmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response message for the GetEnvironment rpc.
type GetEnvironmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetEnvironmentResponse) Reset() {
	*x = GetEnvironmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vortex_v1_vortex_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentResponse) ProtoMessage() {}

func (x *GetEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vortex_v1_vortex_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*GetEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_vortex_v1_vortex_proto_rawDescGZIP(), []int{3}
}

func (x *GetEnvironmentResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request message for the ListEnvironments rpc.
type ListEnvironmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListEnvironmentsRequest) Reset() {
	*x = ListEnvironmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vortex_v1_vortex_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnvironmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvironmentsRequest) ProtoMessage() {}

func (x *ListEnvironmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vortex_v1_vortex_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvironmentsRequest.ProtoReflect.Descriptor instead.
func (*ListEnvironmentsRequest) Descriptor() ([]byte, []int) {
	return file_vortex_v1_vortex_proto_rawDescGZIP(), []int{4}
}

func (x *ListEnvironmentsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response message for the ListEnvironments rpc.
type ListEnvironmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListEnvironmentsResponse) Reset() {
	*x = ListEnvironmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vortex_v1_vortex_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnvironmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvironmentsResponse) ProtoMessage() {}

func (x *ListEnvironmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vortex_v1_vortex_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvironmentsResponse.ProtoReflect.Descriptor instead.
func (*ListEnvironmentsResponse) Descriptor() ([]byte, []int) {
	return file_vortex_v1_vortex_proto_rawDescGZIP(), []int{5}
}

func (x *ListEnvironmentsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request message for the DeleteEnvironment rpc.
type DeleteEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteEnvironmentRequest) Reset() {
	*x = DeleteEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vortex_v1_vortex_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnvironmentRequest) ProtoMessage() {}

func (x *DeleteEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vortex_v1_vortex_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_vortex_v1_vortex_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteEnvironmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response message for the DeleteEnvironment rpc.
type DeleteEnvironmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteEnvironmentResponse) Reset() {
	*x = DeleteEnvironmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vortex_v1_vortex_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnvironmentResponse) ProtoMessage() {}

func (x *DeleteEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vortex_v1_vortex_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*DeleteEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_vortex_v1_vortex_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteEnvironmentResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request message for the Do rpc.
type DoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DoRequest) Reset() {
	*x = DoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vortex_v1_vortex_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoRequest) ProtoMessage() {}

func (x *DoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vortex_v1_vortex_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoRequest.ProtoReflect.Descriptor instead.
func (*DoRequest) Descriptor() ([]byte, []int) {
	return file_vortex_v1_vortex_proto_rawDescGZIP(), []int{8}
}

func (x *DoRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// Response message for the Do rpc.
type DoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DoResponse) Reset() {
	*x = DoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vortex_v1_vortex_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoResponse) ProtoMessage() {}

func (x *DoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vortex_v1_vortex_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoResponse.ProtoReflect.Descriptor instead.
func (*DoResponse) Descriptor() ([]byte, []int) {
	return file_vortex_v1_vortex_proto_rawDescGZIP(), []int{9}
}

func (x *DoResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_vortex_v1_vortex_proto protoreflect.FileDescriptor

var file_vortex_v1_vortex_proto_rawDesc = []byte{
	0x0a, 0x16, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x6f, 0x72, 0x74,
	0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x72, 0x65, 0x64, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x67, 0x63, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x6f, 0x72, 0x74,
	0x65, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x43,
	0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x67, 0x63, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35,
	0x0a, 0x08, 0x61, 0x77, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x57, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x77,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6b, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x6f, 0x72, 0x74,
	0x65, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x2c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x19,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1f, 0x0a,
	0x09, 0x44, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20,
	0x0a, 0x0a, 0x44, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x32, 0xe3, 0x06, 0x0a, 0x06, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x12, 0x92, 0x01, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2f, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22,
	0x0f, 0x2f, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x73,
	0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x6f, 0x72, 0x74, 0x65,
	0x78, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x12, 0x8c, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f,
	0x2f, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x73, 0x12,
	0x96, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x2a, 0x16, 0x2f, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76,
	0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x63, 0x0a, 0x02, 0x44, 0x6f, 0x12, 0x20,
	0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x6f, 0x72,
	0x74, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x6f, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d,
	0x2f, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x3a, 0x64, 0x6f, 0x1a, 0xa6, 0x01,
	0x92, 0x41, 0xa2, 0x01, 0x12, 0x36, 0x28, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x29, 0x20, 0x56, 0x6f,
	0x72, 0x74, 0x65, 0x78, 0x20, 0x41, 0x50, 0x49, 0x2e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x55,
	0x52, 0x4c, 0x3a, 0x20, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x69, 0x67, 0x68, 0x74, 0x62, 0x6c, 0x75, 0x65, 0x2e, 0x69, 0x6f, 0x1a, 0x68, 0x0a, 0x24,
	0x53, 0x65, 0x65, 0x20, 0x68, 0x65, 0x72, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x12, 0x40, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x62, 0x6c,
	0x75, 0x65, 0x2d, 0x69, 0x6f, 0x2f, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x6f, 0x72,
	0x74, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x42, 0xc0, 0x05, 0x92, 0x41, 0x95, 0x05, 0x12, 0xfd, 0x04,
	0x0a, 0x14, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x20, 0x41, 0x50, 0x49, 0x20, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0xdd, 0x04, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x20,
	0x41, 0x50, 0x49, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x52, 0x45, 0x53, 0x54, 0x66, 0x75, 0x6c,
	0x20, 0x41, 0x50, 0x49, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65,
	0x20, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x6e, 0x20,
	0x48, 0x54, 0x54, 0x50, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x75, 0x63, 0x68,
	0x20, 0x61, 0x73, 0x20, 0x60, 0x63, 0x75, 0x72, 0x6c, 0x60, 0x2c, 0x20, 0x6f, 0x72, 0x20, 0x61,
	0x6e, 0x79, 0x20, 0x48, 0x54, 0x54, 0x50, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x20,
	0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x69, 0x73, 0x20, 0x70, 0x61, 0x72, 0x74, 0x20, 0x6f, 0x66,
	0x20, 0x6d, 0x6f, 0x73, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x6e, 0x20, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x69, 0x73, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x5b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x5d, 0x28,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2d, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x29, 0x20,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20,
	0x5b, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5d, 0x28, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6e, 0x69, 0x67, 0x68, 0x74, 0x62, 0x6c, 0x75, 0x65, 0x2d, 0x69, 0x6f, 0x2f, 0x76, 0x6f, 0x72,
	0x74, 0x65, 0x78, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x29, 0x2e, 0x0a, 0x0a, 0x53, 0x6f, 0x6d,
	0x65, 0x20, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2c, 0x20, 0x65, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x74, 0x68, 0x6f, 0x73, 0x65, 0x20, 0x74, 0x68,
	0x61, 0x74, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x20,
	0x6f, 0x66, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2c, 0x20, 0x68, 0x61,
	0x76, 0x65, 0x20, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x3b, 0x20, 0x6e, 0x65, 0x77, 0x6c, 0x69, 0x6e, 0x65, 0x2d,
	0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x20, 0x6f, 0x66, 0x20, 0xe2, 0x80, 0x9c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0xe2, 0x80, 0x9d,
	0x2e, 0x20, 0x45, 0x61, 0x63, 0x68, 0x20, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x20, 0x69, 0x73, 0x20,
	0x61, 0x6e, 0x20, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x20, 0x74, 0x68, 0x61, 0x74,
	0x20, 0x63, 0x61, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x20, 0x65, 0x69, 0x74,
	0x68, 0x65, 0x72, 0x20, 0x61, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x20, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x20, 0x4f, 0x6e, 0x6c, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x61, 0x73,
	0x74, 0x20, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2c, 0x20, 0x69,
	0x66, 0x20, 0x61, 0x6e, 0x79, 0x2e, 0x32, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x10, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x62, 0x6c, 0x75, 0x65, 0x2e, 0x69, 0x6f, 0x2a,
	0x01, 0x02, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76,
	0x6f, 0x72, 0x74, 0x65, 0x78, 0x2d, 0x69, 0x6f, 0x2f, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2d,
	0x67, 0x6f, 0x2f, 0x76, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_vortex_v1_vortex_proto_rawDescOnce sync.Once
	file_vortex_v1_vortex_proto_rawDescData = file_vortex_v1_vortex_proto_rawDesc
)

func file_vortex_v1_vortex_proto_rawDescGZIP() []byte {
	file_vortex_v1_vortex_proto_rawDescOnce.Do(func() {
		file_vortex_v1_vortex_proto_rawDescData = protoimpl.X.CompressGZIP(file_vortex_v1_vortex_proto_rawDescData)
	})
	return file_vortex_v1_vortex_proto_rawDescData
}

var file_vortex_v1_vortex_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_vortex_v1_vortex_proto_goTypes = []any{
	(*CreateEnvironmentRequest)(nil),  // 0: vortexproto.vortex.v1.CreateEnvironmentRequest
	(*CreateEnvironmentResponse)(nil), // 1: vortexproto.vortex.v1.CreateEnvironmentResponse
	(*GetEnvironmentRequest)(nil),     // 2: vortexproto.vortex.v1.GetEnvironmentRequest
	(*GetEnvironmentResponse)(nil),    // 3: vortexproto.vortex.v1.GetEnvironmentResponse
	(*ListEnvironmentsRequest)(nil),   // 4: vortexproto.vortex.v1.ListEnvironmentsRequest
	(*ListEnvironmentsResponse)(nil),  // 5: vortexproto.vortex.v1.ListEnvironmentsResponse
	(*DeleteEnvironmentRequest)(nil),  // 6: vortexproto.vortex.v1.DeleteEnvironmentRequest
	(*DeleteEnvironmentResponse)(nil), // 7: vortexproto.vortex.v1.DeleteEnvironmentResponse
	(*DoRequest)(nil),                 // 8: vortexproto.vortex.v1.DoRequest
	(*DoResponse)(nil),                // 9: vortexproto.vortex.v1.DoResponse
	(*types.GCPInfo)(nil),             // 10: vortexproto.types.GCPInfo
	(*types.AWSInfo)(nil),             // 11: vortexproto.types.AWSInfo
	(*types.Operation)(nil),           // 12: vortexproto.types.Operation
}
var file_vortex_v1_vortex_proto_depIdxs = []int32{
	10, // 0: vortexproto.vortex.v1.CreateEnvironmentRequest.gcp_info:type_name -> vortexproto.types.GCPInfo
	11, // 1: vortexproto.vortex.v1.CreateEnvironmentRequest.aws_info:type_name -> vortexproto.types.AWSInfo
	12, // 2: vortexproto.vortex.v1.CreateEnvironmentResponse.operation:type_name -> vortexproto.types.Operation
	0,  // 3: vortexproto.vortex.v1.Vortex.CreateEnvironment:input_type -> vortexproto.vortex.v1.CreateEnvironmentRequest
	2,  // 4: vortexproto.vortex.v1.Vortex.GetEnvironment:input_type -> vortexproto.vortex.v1.GetEnvironmentRequest
	4,  // 5: vortexproto.vortex.v1.Vortex.ListEnvironments:input_type -> vortexproto.vortex.v1.ListEnvironmentsRequest
	6,  // 6: vortexproto.vortex.v1.Vortex.DeleteEnvironment:input_type -> vortexproto.vortex.v1.DeleteEnvironmentRequest
	8,  // 7: vortexproto.vortex.v1.Vortex.Do:input_type -> vortexproto.vortex.v1.DoRequest
	1,  // 8: vortexproto.vortex.v1.Vortex.CreateEnvironment:output_type -> vortexproto.vortex.v1.CreateEnvironmentResponse
	3,  // 9: vortexproto.vortex.v1.Vortex.GetEnvironment:output_type -> vortexproto.vortex.v1.GetEnvironmentResponse
	5,  // 10: vortexproto.vortex.v1.Vortex.ListEnvironments:output_type -> vortexproto.vortex.v1.ListEnvironmentsResponse
	7,  // 11: vortexproto.vortex.v1.Vortex.DeleteEnvironment:output_type -> vortexproto.vortex.v1.DeleteEnvironmentResponse
	9,  // 12: vortexproto.vortex.v1.Vortex.Do:output_type -> vortexproto.vortex.v1.DoResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_vortex_v1_vortex_proto_init() }
func file_vortex_v1_vortex_proto_init() {
	if File_vortex_v1_vortex_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vortex_v1_vortex_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vortex_v1_vortex_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateEnvironmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vortex_v1_vortex_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vortex_v1_vortex_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetEnvironmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vortex_v1_vortex_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListEnvironmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vortex_v1_vortex_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListEnvironmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vortex_v1_vortex_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vortex_v1_vortex_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteEnvironmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vortex_v1_vortex_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vortex_v1_vortex_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vortex_v1_vortex_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vortex_v1_vortex_proto_goTypes,
		DependencyIndexes: file_vortex_v1_vortex_proto_depIdxs,
		MessageInfos:      file_vortex_v1_vortex_proto_msgTypes,
	}.Build()
	File_vortex_v1_vortex_proto = out.File
	file_vortex_v1_vortex_proto_rawDesc = nil
	file_vortex_v1_vortex_proto_goTypes = nil
	file_vortex_v1_vortex_proto_depIdxs = nil
}
